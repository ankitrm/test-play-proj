language: scala
scala:
- 2.12.3
sudo: required
services:
- docker
jdk:
- oraclejdk8
cache:
  directories:
  - "$HOME/.ivy2/cache"
  - "$HOME/.sbt/boot"
branches:
  except:
  - "/^[0-9]+\\.[0-9]+\\.[0-9]+/"
addons:
  hosts:
before_install:
- export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx1g"
- echo $SBT_OPTS
before_script:
script:
  - pip install --user awscli && export PATH=$PATH:$HOME/.local/bin
  - ./ci/k8/install.sh
  - eval $(aws ecr get-login --region ap-southeast-1 --no-include-email | sed 's|https://||')
  - eval $(aws ecr create-repository --region ap-southeast-1 --repository-name test-play-proj)
  - sbt clean dist && set -x && unzip -d svc target/universal/*-1.0.zip && mv svc/*/* svc/ && rm svc/bin/*.bat && mv svc/bin/* svc/bin/start && rm -rf svc/*-1.0
  - docker build -t test-play-proj:v1 .
  - docker tag test-play-proj:v1 $AWS_ECR_ACCOUNT.dkr.ecr.ap-southeast-1.amazonaws.com/test-play-proj:v1
  - docker push $AWS_ECR_ACCOUNT.dkr.ecr.ap-southeast-1.amazonaws.com/test-play-proj:v1
  - kubectl create -f ci/k8/eks-deployment.yaml
  - kubectl create -f ci/k8/eks-service.json
  - kubectl create -f ci/k8/eks-ingress.yaml
after_success:
after_script:
before_cache:
- find $HOME/.ivy2 -name "ivydata-*.properties" -delete
- find $HOME/.sbt -name "*.lock" -delete
notifications:
  email:
    recipients:
    - ankitvij.23@gmail.com
    on_success: always
    on_failure: always
